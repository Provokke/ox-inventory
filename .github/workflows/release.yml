name: Create Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Get tag name
      id: tag
      run: echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      
    - name: Create release archive
      run: |
        # Create a clean directory for the release
        mkdir -p release/ox_inventory
        
        # Copy all necessary files
        cp -r client.lua release/ox_inventory/
        cp -r server.lua release/ox_inventory/
        cp -r init.lua release/ox_inventory/
        cp -r fxmanifest.lua release/ox_inventory/
        cp -r data/ release/ox_inventory/
        cp -r locales/ release/ox_inventory/
        cp -r modules/ release/ox_inventory/
        cp -r web/ release/ox_inventory/
        cp -r LICENSE release/ox_inventory/
        cp -r LICENSE-RESKIN release/ox_inventory/
        cp -r README.md release/ox_inventory/
        cp -r CHANGELOG.md release/ox_inventory/
        
        # Create the archive
        cd release
        zip -r ../ox_inventory-${{ steps.tag.outputs.tag }}.zip ox_inventory/
        cd ..
        
        # Create checksums
        sha256sum ox_inventory-${{ steps.tag.outputs.tag }}.zip > ox_inventory-${{ steps.tag.outputs.tag }}.zip.sha256
        
    - name: Extract changelog for this version
      id: changelog
      run: |
        # Extract changelog section for this version
        if [ -f CHANGELOG.md ]; then
          # Get the changelog section for this version
          awk '/^## \[.*\].*/{if(found) exit; if(/\[${{ steps.tag.outputs.tag }}\]/) found=1; next} found' CHANGELOG.md > release_notes.md
          if [ ! -s release_notes.md ]; then
            echo "Release ${{ steps.tag.outputs.tag }}" > release_notes.md
            echo "" >> release_notes.md
            echo "Production-optimized version of ox_inventory." >> release_notes.md
          fi
        else
          echo "Release ${{ steps.tag.outputs.tag }}" > release_notes.md
          echo "" >> release_notes.md
          echo "Production-optimized version of ox_inventory." >> release_notes.md
        fi
        
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.tag.outputs.tag }}
        name: OX Inventory Reskin ${{ steps.tag.outputs.tag }}
        body_path: release_notes.md
        files: |
          ox_inventory-${{ steps.tag.outputs.tag }}.zip
          ox_inventory-${{ steps.tag.outputs.tag }}.zip.sha256
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Update latest release info
      run: |
        echo "Release ${{ steps.tag.outputs.tag }} created successfully!"
        echo "Archive: ox_inventory-${{ steps.tag.outputs.tag }}.zip"
        echo "SHA256: $(cat ox_inventory-${{ steps.tag.outputs.tag }}.zip.sha256)"